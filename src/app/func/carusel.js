async function sendPhotoWithNavigation(
  bot,
  chatId,
  userSession,
  currentIndex,
  photo,
  totalPhotos,
  showPrevButton
) {
  const showNext = currentIndex + 1 < totalPhotos;
  await bot.sendPhoto(chatId, photo.path, {
    caption:
      `üëü <b>–ö—Ä–æ—Å—Å–æ–≤–∫–∏ <i>${photo.name}</i>\n<b>üîé Articul:</b> <code>${photo.articul}</code></b>\n\n` +
      `üßµ <b>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</b>\n\n` +
      `‚ûñ <b>–ü–æ–ª:</b> <i>${photo.gender}</i>\n` +
      `‚ûñ <b>–¶–≤–µ—Ç:</b> <i>${photo.color}</i>\n` +
      `‚ûñ <b>–ú–∞—Ç–µ—Ä–∏–∞–ª:</b> <i>${photo.material}</i>\n` +
      `‚ûñ <b>–†–∞–∑–º–µ—Ä:</b> <i>${photo.size} us</i>\n\n` +
      `üí∏ <b>–¶–µ–Ω–∞:</b> <code>${photo.price}‚ÇΩ</code>`,
    parse_mode: "HTML",
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: showPrevButton ? "<<" : "", callback_data: "prev_photo" },
          {
            text: `${currentIndex + 1}/${totalPhotos}`,
            callback_data: "dummy",
          },
          { text: showNext ? ">>" : "", callback_data: "next_photo" },
        ],
        [
          { text: "üá∑üá∫ –ó–∞–∫–∞–∑ –ø–æ –†–æ—Å—Å–∏–∏", callback_data: "order" },
          { text: "üõí –ó–∞–∫–∞–∑ –ø–æ –ú–°–ö", callback_data: "order_msk" },
        ],
        [{ text: "üè† –í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "exit" }],
      ],
    }),
  });
}

module.exports = {
  sendPhotoWithNavigation,
};
