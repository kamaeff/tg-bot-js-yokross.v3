const config = require("../Config/config");
const { admin_btns } = require("./btns");
const { send_photo } = require("../DB/db");

async function start(bot, chatId, username, userSessions) {
  userSessions.delete(chatId);
  chatId = chatId.toString();
  const chat =
    chatId === process.env.GROUP_ADMIN ||
    chatId === process.env.ADMIN_ID ||
    chatId === process.env.LOGIST ||
    chatId === process.env.SERVIRCE_ID;
  await bot.sendPhoto(chatId, "./src/app/img/mainlogo.png", {
    caption:
      `<b>‚úåüèª Yo ${username}! –Ø –±–æ—Ç –≥—Ä—É–ø–ø—ã <i><b><a href="https://t.me/yokross12">YoKross!</a></b></i></b>\n\n` +
      `‚öôÔ∏è <b>–ö–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:</b>\n\n` +
      `‚ûñ <b>–ü–æ–∏—Å–∫ –ø–∞—Ä—ã</b> - <i>–§–∏–ª—å—Ç—Ä –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã</i>\n` +
      `‚ûñ <b>ShowRoom</b> - <i>–ö–æ–ª–ª–µ–∫—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞</i>\n` +
      `‚ûñ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> - <i>–ò–Ω—Ñ–∞ –æ —Ç–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ</i>\n` +
      `‚ûñ <b>–ì–∞–π–¥</b> - <i>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏</i>\n` +
      `‚ûñ <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b> - <i>help@yokrossbot.ru</i>\n\n` +
      `üí¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã --> <i>/commands</i>\n\n` +
      `<i><b>Created by: </b><b><a href="https://t.me/YoKrossbot_log">Anton Kamaev</a></b>.\n<b>Alfa-version.v3</b></i>`,
    parse_mode: "HTML",
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: "üîé –ü–æ–∏—Å–∫ –ø–∞—Ä—ã", callback_data: "choose" },
          { text: "‚ö°Ô∏è ShowRoom", callback_data: "show" },
        ],
        [{ text: "ü§ì –ì–∞–π–¥", url: "https://t.me/yokrossguide12/5" }],
        [{ text: "üôãüèª‚Äç‚ôÇÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data: "profile" }],
        [{ text: chat ? "üìë –ê–¥–º–∏–Ω–∫–∞" : "", callback_data: "admin" }],
      ],
    }),
  });
}

async function start_admin(bot, chatId) {
  await bot.sendMessage(
    chatId,
    `<b><i>‚úåüèª Yo AdminPanel</i></b>\n\n` +
      `<i><b>Created by: </b>Anton Kamaev\n@yokross_bot Alfa-version(v2)</i>`,
    {
      parse_mode: "HTML",
      reply_markup: JSON.stringify(admin_btns),
    }
  );
}

async function tech(bot, chatId, username) {
  await bot.sendPhoto(chatId, await send_photo("tech"), {
    caption:
      `‚ùóÔ∏è <b>${username}</b>, –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å–µ–π—á–∞—Å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚ùóÔ∏è\n\n` +
      `ü•∫ –ö–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –±—É–¥—É –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –∏ –∞–ø–¥–µ–π—Ç–∞–º–∏ –≤–æ—Ç —Ç—É—Ç ---> <b><a href="https://t.me/YoKrossbot_log">YoKrossBot.log.</a></b>`,
    parse_mode: "HTML",
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [{ text: "üè† –í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "exit" }],
      ],
    }),
  });
}

async function check_folow(YokrossId, chatId, bot, username) {
  try {
    const chatMember = await bot.getChatMember(YokrossId, chatId);

    if (
      chatMember &&
      (chatMember.status === "member" ||
        chatMember.status === "creator" ||
        chatMember.status === "administrator")
    ) {
      return true;
    } else {
      await bot.sendPhoto(chatId, "./src/app/img/profile_second.jpg", {
        caption:
          `‚úåüèº Yo <i><b>${username}</b></i>, —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É <b><i><a href='https://t.me/yokross12'> YoKross</a></i></b> !` +
          `\n\n–¢–∞–∫ –∂–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π <b><i><a href='https://t.me/yokrossguide12/3'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</a></i></b> !\n\n` +
          `–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π --> <i><b>–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è</b></i>\n\n`,
        parse_mode: "HTML",
        reply_markup: JSON.stringify({
          inline_keyboard: [
            [{ text: "‚úåüèº YoKross", url: "https://t.me/yokross12" }],
            [
              {
                text: "üìë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                url: "https://t.me/yokrossguide12/3",
              },
            ],
            [
              {
                text: "‚úÖ –Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è",
                callback_data: "exit",
              },
            ],
          ],
        }),
      });
      return false;
    }
  } catch (error) {
    console.error("Error in check_folow:", error);
    return false;
  }
}

module.exports = {
  start,
  tech,
  start_admin,
  check_folow,
};
